msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Project-Id-Version: Tutorial v3.4 RU\n"
"Last-Translator: Artem Dmatriev <HACKUA24.02@gmail.com>\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ua_UA\n"
"X-Generator: Poedit 2.2\n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"MIME-Version: 1.0\n"

#: tform1.btnok.caption
msgctxt "tform1.btnok.caption"
msgid "OK"
msgstr "Підтвердити"

#: tform1.button1.caption
msgctxt "tform1.button1.caption"
msgid "Next"
msgstr "Далі"

#: tform1.caption
msgid "Cheat Engine Tutorial v3.4"
msgstr "Навчальний посібник v3.4"

#: tform1.edtpassword.hint
msgid "Ви можете це зробити імовірно до заходу ви будете робити"
msgstr "Введіть пароль для негайного переходу до потрібного вам кроку"

#: tform1.label1.caption
msgid "Password"
msgstr "Пароль"

#: tform10.button3.caption
msgid "Restart game"
msgstr "Перепуск гри"

#: tform10.button4.caption
msgctxt "tform10.button4.caption"
msgid "Attack"
msgstr "Атака"

#: tform10.button5.caption
msgctxt "TFORM10.BUTTON5.CAPTION"
msgid "Attack"
msgstr "Атака"

#: tform10.button6.caption
msgctxt "tform10.button6.caption"
msgid "Restart game and autoplay"
msgstr "Випадкова гра"

#: tform10.button7.caption
msgctxt "TFORM10.BUTTON7.CAPTION"
msgid "Attack"
msgstr "Атака"

#: tform10.button8.caption
msgctxt "TFORM10.BUTTON8.CAPTION"
msgid "Attack"
msgstr "Атака"

#: tform10.caption
msgid "Step 9"
msgstr "Крок 9"

#: tform10.label10.caption
msgctxt "TFORM10.LABEL10.CAPTION"
msgid "Health: 500"
msgstr "Здоров'я: 500"

#: tform10.label2.caption
msgctxt "tform10.label2.caption"
msgid "Health:"
msgstr "Здоров'я:"

#: tform10.label3.caption
msgid "Player 1: Dave"
msgstr "Гравець 1: Дейв"

#: tform10.label4.caption
msgctxt "tform10.label4.caption"
msgid "Health: 100"
msgstr "Здоров'я: 100"

#: tform10.label5.caption
msgid "Player 2: Eric"
msgstr "Гравець 2: Ерік"

#: tform10.label6.caption
msgctxt "TFORM10.LABEL6.CAPTION"
msgid "Health: 100"
msgstr "Здоров'я: 100"

#: tform10.label7.caption
msgid "C. Player 3: HAL"
msgstr "Ворог 1: Хал"

#: tform10.label8.caption
msgctxt "tform10.label8.caption"
msgid "Health: 500"
msgstr "Здоров'я: 500"

#: tform10.label9.caption
msgid "C. Player 4: KITT"
msgstr "Ворог 2: Кітт"

#: tform2.button1.caption
msgctxt "TFORM2.BUTTON1.CAPTION"
msgid "Next"
msgstr "Далі"

#: tform2.button2.caption
msgctxt "tform2.button2.caption"
msgid "Hit me"
msgstr "Удар"

#: tform2.caption
msgid "Step 2"
msgstr "Крок 2"

#: tform2.label2.caption
msgctxt "tform2.label2.caption"
msgid "Health:"
msgstr "Здоров'я:"

#: tform2.speedbutton1.caption
msgctxt "tform2.speedbutton1.caption"
msgid "Skip"
msgstr "Пропустити"

#: tform3.button1.caption
msgctxt "TFORM3.BUTTON1.CAPTION"
msgid "Next"
msgstr "Далі"

#: tform3.button2.caption
msgctxt "TFORM3.BUTTON2.CAPTION"
msgid "Hit me"
msgstr "Удар"

#: tform3.caption
msgid "Step 3"
msgstr "Крок 3"

#: tform3.speedbutton1.caption
msgctxt "TFORM3.SPEEDBUTTON1.CAPTION"
msgid "Skip"
msgstr "Пропустити"

#: tform4.button1.caption
msgctxt "TFORM4.BUTTON1.CAPTION"
msgid "OK"
msgstr "Підтвердити"

#: tform4.caption
msgid "Tutorial End"
msgstr "Кінець навчання"

#: tform4.label1.caption
msgid "Well done, you've зроблений tutorial of Cheat Engine."
msgstr "Вітаю, ви успішно завершили всі етапи навчання."

#: tform4.label2.caption
msgid "Just play around with tutorial and learn how thether scanmethods work."
msgstr "Тепер можете пройти їх по новій, застосовуючи інші правила пошуку."

#: tform4.label3.caption
msgid "Під час будь-який виберіть з Cheat Engine Forum для useful information and ask for help"
msgstr "І ви завжди можете знайти корисну інформацію або звернутися за допомогою на форумі Cheat Engine"

#: tform4.label4.caption
msgid "Cheat Engine Forum"
msgstr "Форум Cheat Engine"

#: tform5.button1.caption
msgid "Fire"
msgstr "Постріл"

#: tform5.button2.caption
msgctxt "TFORM5.BUTTON2.CAPTION"
msgid "Next"
msgstr "Далі"

#: tform5.button3.caption
msgctxt "TFORM5.BUTTON3.CAPTION"
msgid "Hit me"
msgstr "Удар"

#: tform5.caption
msgid "Step 4"
msgstr "Крок 4"

#: tform5.label2.caption
msgid "Ammo"
msgstr "Патрони"

#: tform5.label3.caption
msgctxt "TFORM5.LABEL3.CAPTION"
msgid "Health:"
msgstr "Здоров'я:"

#: tform5.label5.caption
msgid "(float)"
msgstr "(float)"

#: tform5.label6.caption
msgid "(double)"
msgstr "(double)"

#: tform5.speedbutton1.caption
msgctxt "TFORM5.SPEEDBUTTON1.CAPTION"
msgid "Skip"
msgstr "Пропустити"

#: tform6.button1.caption
msgctxt "tform6.button1.caption"
msgid "Change value"
msgstr "Змінити значення"

#: tform6.button2.caption
msgctxt "TFORM6.BUTTON2.CAPTION"
msgid "Next"
msgstr "Далі"

#: tform6.caption
msgid "Step 5"
msgstr "Крок 5"

#: tform6.speedbutton1.caption
msgctxt "TFORM6.SPEEDBUTTON1.CAPTION"
msgid "Skip"
msgstr "Пропустити"

#: tform7.button1.caption
msgctxt "TFORM7.BUTTON1.CAPTION"
msgid "Change value"
msgstr "Змінити значення"

#: tform7.button2.caption
msgctxt "TFORM7.BUTTON2.CAPTION"
msgid "Next"
msgstr "Далі"

#: tform7.button3.caption
msgctxt "tform7.button3.caption"
msgid "Change pointer"
msgstr "Змінити покажчик"

#: tform7.caption
msgid "Step 6"
msgstr "Крок 6

#: tform7.speedbutton1.caption
msgctxt "TFORM7.SPEEDBUTTON1.CAPTION"
msgid "Skip"
msgstr "Пропустити"

#: tform8.button1.caption
msgctxt "TFORM8.BUTTON1.CAPTION"
msgid "Hit me"
msgstr "Удар"

#: tform8.button2.caption
msgctxt "TFORM8.BUTTON2.CAPTION"
msgid "Next"
msgstr "Далі"

#: tform8.caption
msgid "Step 7"
msgstr "Крок 7"

#: tform8.label1.caption
msgctxt "TFORM8.LABEL1.CAPTION"
msgid "Health: 100"
msgstr "Здоров'я: 100"

#: tform8.speedbutton1.caption
msgctxt "TFORM8.SPEEDBUTTON1.CAPTION"
msgid "Skip"
msgstr "Пропустити"

#: tform9.button1.caption
msgctxt "TFORM9.BUTTON1.CAPTION"
msgid "Change value"
msgstr "Змінити значення"

#: tform9.button2.caption
msgctxt "TFORM9.BUTTON2.CAPTION"
msgid "Next"
msgstr "Далі"

#: tform9.button3.caption
msgctxt "TFORM9.BUTTON3.CAPTION"
msgid "Change pointer"
msgstr "Змінити покажчик"

#: tform9.caption
msgid "Step 8"
msgstr "Крок 8"

#: tform9.speedbutton1.caption
msgctxt "TFORM9.SPEEDBUTTON1.CAPTION"
msgid "Skip"
msgstr "Пропустити"

#: tfrmhelp.caption
msgid "Help"
msgstr "Допомога"

#: tfrmhelp.image1.hint
msgid "Більше інформації як відео для цього щастя і написані літератури"
msgstr "Додаткова інформація у вигляді відео або письмового посібника для цього кроку."

#: unit1.rsfirststeptoohardbettergiveupnow
msgid "Перший крок на hard? Go на forum.cheatengine.org, клацніть на \"Tutorials\" for helpful guides!"
msgstr "Перший крок занадто складний? Зайдіть на forum.cheatengine.org до розділу "Cheat Engine Tutorials", де ви можете знайти багато корисних посібників!"

#: unit1.rstutorial1
msgid ""
"Welcome to the Cheat Engine Tutorial (v3.4)\n"
"\n"
"Ця література буде вивчити твою основу дійства в відео грі. Це буде й висловити фундаментальні аспекти використання Cheat Engine (або CE для шортів).

#: tfrmhelp.image1.hint
msgid "Bilʹshe informatsiyi yak video dlya tsʹoho shchastya i napysani literatury"
msgstr "Dodatkova informatsiya u vyhlyadi video abo pysʹmovoho posibnyka dlya tsʹoho kroku."

#: unit1.rsfirststeptoohardbettergiveupnow
msgid "Pershyy krok na hard? Go na forum.cheatengine.org, klatsnitʹ na \"Tutorials\" for helpful guides!"
msgstr "Pershyy krok zanadto skladnyy? Zayditʹ na forum.cheatengine.org do rozdilu "Cheat Engine Tutorials", de vy mozhete znayty bahato korysnykh posibnykiv!"

#: unit1.rstutorial1
msgid ""
"Welcome to the Cheat Engine Tutorial (v3.4)\n"
"\n"
"Tsya literatura bude vyvchyty tvoyu osnovu diystva v video hri. Tse bude y vyslovyty fundamentalʹni aspekty vykorystannya Cheat Engine (abo CE dlya shortiv).
"\n"
"1: Open Cheat Engine if it currently isn't running.\n"
"2: Click on the \"Open Process\" icon (it's the top-left icon with the computer on it, below \"File\".).\n"
"3: With the Process List window now open, look for this tutorial's process in the list. It will look something like \"00001F98-Tutorial-x86_64.exe\" or \"0000047C-Tutorial-i386.exe\". (The first 8 numbers/letters will probably be different.)\n"
"4: Once you've found the process, click on it to select it, then click the \"Open\" button. (Don't worry about all the other buttons right now. You can learn about them later if you're interested.)\n"
"\n"
"Congratulations! If you did everything correctly, the process window should be gone with Cheat Engine now attached to the tutorial (you will see the process name towards the top-center of CE).\n"
"\n"
"Click the \"Next\" button below to continue, or fill in the password and click the \"OK\" button to proceed to that step.)\n"
"\n"
"If you're having problems, simply head over to forum.cheatengine.org, then click on \"Tutorials\" to view beginner-friendly guides!\n"
msgstr ""
"Ласкаво просимо до навчального посібника Cheat Engine (v3.4)\n"
"\n"
"Це навчальний посібник навчить вас основам читерства у відеоіграх. Він також покаже вам основні аспекти використання Cheat Engine. Виконайте кроки нижче, щоб почати навчання.\n"
"\n"
"1: Відкрийте Cheat Engine, якщо він не запущений зараз.\n"
"2: Натисніть на іконку «Вибір процесу для відкриття» (іконка із зображенням комп'ютера у верхньому лівому куті, розташована під «Файл».).\n"
"3: У вікні «Список процесів» знайдіть та відкрийте процес цього посібника. Він буде виглядати як "00001F98-Tutorial-x86_64.exe" або "0000047C-Tutorial-i386.exe". (Перші 8 цифр/літер, швидше за все, відрізнятимуться.)\n"
"4: Як тільки ви знайшли процес, натисніть на нього, щоб його виділити, а потім натисніть кнопку "Відкрити". (Не звертайте зараз уваги на інші кнопки. Ви можете дізнатися про них пізніше, якщо вам буде цікаво.)\n "
"\n"
"Вітаю! Якщо ви все зробили правильно, то вікно з процесами, пропаде, а Cheat Engine приєднатися до процесу навчального посібника (ви побачите назву процесу у верхній центральній частині Cheat Engine).\n"
"\n"
"Натисніть кнопку "Далі" для продовження або вкажіть пароль і натисніть "Підтвердити", щоб розпочати певний крок.\n"
"\n"
"Якщо у вас виникли проблеми, просто зайдіть на forum.cheatengine.org в розділ "Cheat Engine Tutorials", щоб переглянути посібники, орієнтовані на новачків!\n"

#: unit10.rsdead
msgid "DEAD"
msgstr "МЕРТВИЙ"

#: unit10.rsfailureyourteamdied
msgid "Failure. Your team died"
msgstr "Невдача. Ваша команда мертва"

#: unit10.rshealth
msgid "Health: %s"
msgstr "Здоров'я: %s"

#: unit10.rsrestartgameandautoplay
msgctxt "unit10.rsrestartgameandautoplay"
msgid "Restart game and autoplay"
msgstr "Випадкова гра"

#: unit10.rsstep9sharedcodepw
msgid "Step 9: Shared code: (PW=%s)"
msgstr "Крок 9: Спільно використовуваний код: (пароль=%s)"

#: unit10.rsstop
msgid "Stop"
msgstr "Стоп"

#: unit10.rsthisplayerisalreadydeadrestartthegame
msgid "This player is already dead. Restart the game"
msgstr "Цей гравець вже мертвий. Перезапустіть гру"

#: unit10.rstryagain10
msgid "Чи не показано, як це зробити? Чи не щастить. Потрібно збиратися в forum на cheatengine.org або зробити деякий час, щоб виконати його, щоб бути.
msgstr ""
"Не можете розібратися? Не турбуйтеся, спробуйте запитати про це на форумі cheatengine.org або, можливо, там уже хтось це докладно пояснив.\n"
"Ви впевнені, що хочете вийти?"
#: unit10.rstutorialstep9
msgid ""
"This step will explain how to deal with code that is used for other object of the same type\n"
"\n"
"Often when you've found health of a unit or your own player, you will find that if you remove the code, it affects enemies as well.\n"
"In these cases you must find out how to distinguish between your and the enemies objects.\n"
"Sometimes this is as easy as checking the first 4 bytes (Function pointer table) which often point to a unique location for the player, and sometimes it's a team number, or a pointer to a pointer to a pointer to a pointer to a pointer to a playername. It all depends on the "
"complexity of the game, and your luck\n"
"\n"
"The easiest method is finding what addresses the code you found writes to and then use the dissect data feature to compare against two structures. (Your unit(s)/player and the enemies) And then see if you can find out a way to distinguish between them.\n"
"When you have found out how to distinguish between you and the computer you can inject an assembler script that checks for the condition and then either do not execute the code or do something else. (One hit kills for example)\n"
"Alternatively, you can also use this to build a so called \"Array of byte\" string which you can use to search which will result in a list of all your or the enemies players\n"
"In this tutorial I have implemented the most amazing game you will ever play.\n"
"It has 4 players. 2 Players belong to your team, and 2 Players belong to the computer. \n"
"Your task is to find the code that writes the health and make it so you win the game WITHOUT freezing your health\n"
"To continue, press \"Restart game and autoplay\" to test that your code is correct\n"
"\n"
"\n"
"Tip: Health is a float\n"
"Tip2: There are multiple solutions\n"
msgstr ""
"Цей крок навчить вас працювати з інструкцією, яку використовують кілька об'єктів того самого типу.\n"
"\n"
"Часто буває так, що ви робите щось із інструкцією, що працює зі здоров'ям вашого гравця і те саме відбувається зі здоров'ям ворогів.\n"
"У таких випадках вам необхідно з'ясувати, як можна відрізнити вашого гравця від ворогів.\n"
"Іноді це так само просто, як перевірка перших чотирьох байт структури (Таблиця покажчиків на функції), які часто вказують на унікальне розташування для гравця, а іноді це номер команди (id), в якій складається гравець, або покажчик на покажчик на покажчик на "
"вказівник на вказівник на ім'я_гравця. Все залежить від складності гри та вашої удачі.\n"
"\n"
"Найлегший метод - дізнатися в які адреси записує інструкція, визначити початки структур (Вашого об'єкта/персонажу та ворожих) і спробувати знайти різницю між ними, скориставшись функцією «Аналіз даних/структур».\n"
"Коли ви дізналися, як відрізнити вашого гравця від комп'ютера, ви можете виконати ін'єкцію асемблерного скрипту, в якому спочатку звіряється умова (чи це ваш гравець/об'єкт, чи ворожий), а потім або просто виконується оригінальний код, або робиться щось ще (наприклад : "
"вбивство з одного удару). Також, ви можете використовувати відмінні риси структур для створення так званого рядка "Массива байт", пошук якого допоможе знайти структури всіх ваших або ворожих гравців/об'єктів.\n"
"\n"
"Спеціально для цього прикладу, я зробив саму класну гру з усіх, в які ви коли-небудь грали. У ній присутні 4 гравці: 2 гравці у вашій команді та 2 гравці у команді комп'ютера. Ваше завдання полягає в тому, щоб знайти інструкцію, яка пише на адресу зі значенням "
"здоров'я та виграти гру БЕЗ заморожування здоров'я ваших гравців.\n"
"Щоб перевірити працездатність вашого скрипта, натисніть кнопку «Випадкова гра»\n"
"\n"
"\n"
"Підказка: Значення здоров'я має тип Float\n"
"Підказка 2: Це завдання можна вирішити кількома способами.\n"

#: unit10.rsu10thiswasthelasttutorial
msgid "This was the last tutorial and you skipped it. You lose"
msgstr "Це був останній крок, а ти і його пропустив. Нероба"

#: unit2.rsawyouredeathletmereviveyou
msgctxt "unit2.rsawyouredeathletmereviveyou"
msgid "Aw, you're dead! Let me revive you"
msgstr "Ви померли! Дозвольте пожвавити вас."

#: unit2.rsloser
msgctxt "unit2.rsloser"
msgid "BOO"
msgstr "БУ!"

#: unit2.rsquittingonstep2thisistheeasieststepthereisfindheal
msgid "Quitting on step2? This is the easiest step there is. Find health, change health, done.... Sure you want to quit?"
msgstr ""
"Здаєтеся вже зараз?Україньці не здаються!Тільки москалі здаються!Це найпростіший крок із усіх. Просто знайдіть значення здоров'я, зміните його і готове...\n"
"Ви впевнені, що хочете вийти?"

#: unit2.rsstep2exactvaluescanningpw
msgid "Step 2: Exact Value scanning (PW="
msgstr "Крок 2: Пошук точного значення (пароль="

#: unit2.rstutorialstep2
msgid ""
"Now that you have opened the tutorial with Cheat Engine let's get on with the next step.\n"
"\n"
"You can see at the bottom of this window is the text Health: xxx\n"
"Each time you click 'Hit me'  your health gets decreased.\n"
"\n"
"To get to the next step you have to find this value and change it to 1000\n"
"\n"
"To find the value there are different ways, but I'll tell you about the easiest, 'Exact Value':\n"
"First make sure value type is set to at least 2-bytes or 4-bytes. 1-byte will also work, but you'll run into an easy to fix problem when you've found the address and want to change it. The 8-byte may perhaps works if the bytes after the address are 0, but I wouldn't take "
"the bet.\n"
"Single, double, and the other scans just don't work, because they store the value in a different way.\n"
"\n"
"When the value type is set correctly, make sure the scantype is set to 'Exact Value'\n"
"Then fill in the number your health is in the value box. And click 'First Scan'\n"
"After a while (if you have a extremely slow pc) the scan is done and the results are shown in the list on the left\n"
"\n"
"If you find more than 1 address and you don't know for sure which address it is, click 'Hit me', fill in the new health value into the value box, and click 'Next Scan'\n"
"repeat this until you're sure you've found it. (that includes that there's only 1 address in the list.....)\n"
"\n"
"Now double click the address in the list on the left. This makes the address pop-up in the list at the bottom, showing you the current value.\n"
"Double click the value, (or select it and press enter), and change the value to 1000.\n"
"\n"
"If everything went ok the next button should become enabled, and you're ready for the next step.\n"
"\n"
"\n"
"Note:\n"
"If you did anything wrong while scanning, click \"New Scan\" and repeat the scanning again.\n"
"Also, try playing around with the value and click 'hit me'\n"
msgstr ""
"Тепер,коли у вас відкриті Cheat Engine і це навчальний посібник, ви можете приступити до наступного кроку.\n"
"\n"
"У нижній частині вікна можна побачити текст «Здоров'я: ххх»\n"
"Кожного разу, коли ви натискаєте на кнопку «Удар», здоров'я буде зменшуватися.\n"
"\n"
"Щоб перейти до наступного кроку, вам необхідно знайти значення здоров'я та змінити його на 1000\n"
"\n"
"Це значення можна знайти різними способами, але я розповім вам про найпростіше, «Точне значення»:\n"
"Для початку виберіть тип "2 Байти" або "4 Байти". "1 Байт" теж пригодитися, але тоді ви не зможете змінити значення на "1000" (що можна легко виправити). Також можна використовувати і "8 Байт", але я не став би це робити.\n"
"Такі типи значення як "Float", "Double" та інші зараз не спрацюють, тому що в них значення зберігаються по-іншому.\n"
"\n"
"Тепер, коли тип значення було вибрано правильно, переконайтеся, що типом пошуку вказано "Точне значення".\n"
"Далі, вкажіть кількість здоров'я у полі «Значення» та натисніть кнопку «Пошук»\n"
"Через деякий час (залежно від потужності комп'ютера) пошук завершиться, а його результати з'являться у вигляді списку, розташованого в лівій частині програми.\n"
"\n"
"Якщо в цьому списку буде більше однієї адреси, і ви не знаєте, напевно, в якому з них зберігається значення здоров'я, то натисніть кнопку «Удар» ще раз, введіть нове значення здоров'я в поле «Значення» і натисніть кнопку «Відсів». Повторюйте цю процедуру поки не будете "
"впевнені, що знайшли потрібну адресу. (або поки в списку не залишиться лише 1 адреса...)\n"
"Тепер зробіть подвійний клік за знайденою адресою (або виділіть його та натисніть клавішу "Enter") та поміняйте значення на 1000.\n"
"\n"
"Якщо все зроблено правильно, то вам стане доступна кнопка "Далі" і ви зможете перейти до наступного кроку.\n"
"\n"
"Примітка:\n"
"Якщо ви припустилися будь-якої помилки при пошуку, то натисніть на кнопку "Нов. пошук" і проробіть всі дії ще раз.\n"

#: unit3.rsdead
msgid "Ви можете скористатися ним! Let me get a replacement!
msgstr "Схоже, що смужка закінчилася. Давайте я її заповню!"
#: unit3.rsloser
msgctxt "unit3.rsloser"
msgid "BOO"
msgstr "БУ!"

#: unit3.rsstep3unknowninitialvaluepw
msgid "Step 3: Unknown initial value (PW="
msgstr "Крок 3: Невідоме значення (пароль="

#: unit3.rstryagain3
msgid "Step 3 isn't really that hard. Just do a new scan, unkown initial value and then decreased value till you find it. Almost everyone gets past this one. Sure you want to quit?"
msgstr ""
"Цей крок насправді не такий складний. Просто почніть з пошуку невідомого значення, натискайте на кнопку «Удар» і робіть відсів за правилом «Значення зменшилося» доти, доки не знайдете потрібну адресу. Будь-хто може впоратися з цим.\n"
Ви впевнені, що хочете вийти?"

#: unit3.rstutorialstep3
msgid ""
"Ok, seeing that you've figured out how to find a value using exact value let's move on to the next step.\n"
"\n"
"First things first though. Since you are doing a new scan, you have to click on New Scan first, to start a new scan. (You may think this is straighforward, but you'd be surprised how many people get stuck on that step) I won't be explaining this step again, so keep this in "
"mind\n"
"Now that you've started a new scan, let's continue\n"
"\n"
"In the previous test we knew the initial value so we could do a exact value, but now we have a status bar where we don't know the starting value.\n"
"We only know that the value is between 0 and 500. And each time you click 'hit me' you lose some health. The amount you lose each time is shown above the status bar.\n"
"\n"
"Again there are several different ways to find the value. (like doing a decreased value by... scan), but I'll only explain the easiest. \"Unknown initial value\", and decreased value.\n"
"Because you don't know the value it is right now, a exact value wont do any good, so choose as scantype 'Unknown initial value', again, the value type is 4-bytes. (most windows apps use 4-bytes)click first scan and wait till it's done.\n"
"\n"
"When it is done click 'hit me'. You'll lose some of your health. (the amount you lost shows for a few seconds and then disappears, but you don't need that)\n"
"Now go to Cheat Engine, and choose 'Decreased Value' and click 'Next Scan'\n"
"When that scan is done, click hit me again, and repeat the above till you only find a few. \n"
"\n"
"We know the value is between 0 and 500, so pick the one that is most likely the address we need, and add it to the list.\n"
"Now change the health to 5000, to proceed to the next step.\n"
msgstr ""
"Добре, мабуть, ви розібралися з пошуком точного значення, що дозволило нам приступити до наступного кроку.\n"
"\n"
"Спочатку про найважливіше. Оскільки ви робите новий пошук, то насамперед вам потрібно натиснути на кнопку \"Нов. пошук", для того щоб його почати (Ви можете подумати: «Це ж очевидно». Але ви були б здивовані, дізнавшись як багато людей застряє на цьому кроці). Я не пояснюватиму "
"це знову, тому майте це на увазі.\n"
"Тепер, коли ви розпочали новий пошук, давайте продовжимо.\n"
"\n"
"У попередньому кроці ми точно знали початкове значення, тому ми могли здійснити пошук «Точного значення», але зараз у нас є лише смужка, без будь-яких чисел.\n"
"Все, що нам відомо, так це те, що значення знаходиться в діапазоні від 0 до 500. І щоразу, після натискання на кнопку "Удар", втрачається частина здоров'я. Скільки саме - відображається над смужкою.\n"
"\n"
"І тут є кілька способів знайти значення (наприклад: виконуючи відсів за правилом «Значення зменшилося на...»), але я поясню вам найпростіше. Буде використано лише два типи пошуку - «Невідоме значення» та «Значення зменшилося».\n"
"Тож прямо зараз значення нам не відомо, то від пошуку "Точного значення" не буде ніякої користі, тому виберіть "Невідоме значення", а тип, як і минулого разу, "4 Байти" (більшість додатків у Windows використовують саме цей тип даних).\n"
"Натисніть на кнопку "Пошук" і чекайте його завершення.\n"
"\n"
"Після завершення пошуку натисніть кнопку «Удар». Частина здоров'я втрачається (Втрачена кількість буде відображатися над смужкою протягом декількох секунд, а потім зникне, але нам це значення і не потрібно).\n"
"Тепер повертайтеся до Cheat Engine, виберіть "Значення зменшилося" і натисніть "Відсів".\n"
"Після завершення відсіву знову натисніть на кнопку «Удар» і знову зробіть відсів за правилом «Значення зменшилося». Повторюйте ці дії доки у списку не виявиться одна або трохи більше адрес.\n"
"\n"
"Отже, нам відомо, що значення знаходиться в діапазоні від 0 до 500, тому, якщо в списку знайдених адрес знаходиться більше однієї адреси, то виберіть більш відповідний до даного діапазону і додайте його в таблицю.\n"
"Зміна значення цієї адреси на 5000 дозволить вам перейти до наступного кроку.\n"

#: unit5.rsconfirmclose5
msgid "Come on. This step is simple. For health do a float scan, and for ammo a double type. (don't forget to disable fastscan for double in this case) Just ignore the fact that it looks different because it has a \".\" in the value. You sure you want to quit?"
msgstr ""
"Та гаразд, це ж просто. Виконуйте пошук, використовуючи тип даних "Float" для знаходження значення здоров'я та "Double" для патрон. (Не забудьте вимкнути "Швидкий пошук" під час пошуку "Double" значення).\n"
"Ви впевнені, що хочете вийти?"

#: unit5.rsdead
msgid "I think you're dead!%sPress ok to become a brain eating zombie"
msgstr "Я думаю, ви померли!%s Натисніть "Підтвердити", щоб стати зомбі, що пожирає мізки"

#: unit5.rsloser
msgctxt "unit5.rsloser"
msgid "BOO"
msgstr "БУ!"

#: unit5.rsoutofammo
msgid "Out of ammo!%sPress ok to stock up on some ammo"
msgstr "Кулі закінчились!%s Натисніть «Підтвердити» для поповнення"

#: unit5.rsstep4floatingpointspw
msgid "Step 4: Floating points (PW="
msgstr "Крок 4: Числа з плаваючою точкою (пароль="

#: unit5.rstutorialstep4
msgid ""
"In the previous tutorial we used bytes to scan, but some games store information in so called 'floating point' notations. \n"
"(probably to prevent simple memory scanners from finding it the easy way)\n"
"a floating point is a value with some digits behind the point. (like 5.12 or 11321.1)\n"
"\n"
"Below you see your health and ammo. Both are stored as Floating point notations, but health is stored as a float and ammo is stored as a double.\n"
"Click on hit me to lose some health, and on shoot to decrease your ammo with 0.5\n"
" \n"
"You have to set BOTH values to 5000 or higher to proceed.\n"
"\n"
"Exact value scan will work fine here, but you may want to experiment with other types too.\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Hint: It is recommended to disable \"Fast Scan\" for type double\n"
msgstr ""
"У попередньому кроці ми шукали тільки цілі числа, але деякі ігри зберігають значення у вигляді так званого числа з плаваючою точкою (ймовірно, щоб ускладнити пошук для простих сканерів пам'яті). Число з плаваючою точкою - це значення з деякими цифрами після точки (наприклад: "
"5.12 или 11321.1)\n"
"\n"
"У нижній частині вікна ви можете бачити кількість вашого здоров'я та патрон. Значення обох їх зберігаються як чисел з плаваючою точкою, але значення здоров'я зберігається як Float, а патрон - як Double.\n"
"При натисканні на кнопку "Удар" ви втратите частину здоров'я, а при натисканні на кнопку "Постріл" кількість патрон зменшиться на 0.5\n"
"\n"
"Щоб перейти до наступного кроку, потрібно змінити значення обох параметрів на 5000 або більше.\n"
"\n"
"У цьому випадку вам просто потрібно шукати і відсіювати «Точне значення», але, суто для свого розвитку, ви можете погратися і з іншими типами пошуку («Діапазон», «Значення зменшилося на...», «Більше ніж... » "Значення не змінилося" і т.д.)\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Підказка: Рекомендується відключити «Швидкий пошук» під час пошуку значення з типом «Double»\n"

#: unit6.rsloser
msgctxt "unit6.rsloser"
msgid "BOO"
msgstr "БУ!"

#: unit6.rsstep5codefinderpw
msgid "Step 5: Code finder (PW=%s)"
msgstr "Крок 5: Знаходження та підміна коду (пароль=%s)"

#: unit6.rstryagain6
msgid "This may look difficult. but it's basicly. Find health, rigthclick health, find what writes, change health, click replace, change health, done.  But don't feel down if you don't get it. at least you know the basicas of memory scanning...  Are you sure you want to quit?"
msgstr ""
"Це може здатися важким, але це є основою всього. Знайдіть адресу зі значенням здоров'я, натисніть «Знайти інструкції, що записують на цю адресу», змініть значення здоров'я, натисніть «Замінити NOP'ами», знову змініть значення здоров'я – готове. Не засмучуйтесь, якщо у "
"Вас не вийде. Як мінімум, ви знаєте основи пошуку в пам'яті...\n"
"Ви впевнені, що хочете покинути?"

#: unit6.rstutorialstep5
msgid ""
"Sometimes the location of where something is stored at changes when you restart the game, or even while you're playing.. In that case you can use 2 things to still make a table that works.\n"
"In this step I'll try to describe how to use the Code Finder function.\n"
"\n"
"The value down here will be at a different location each time you start the tutorial, so a normal entry in the address list wouldn't work.\n"
"First try to find the address. (you've got to this point so I assume you know how to)\n"
"When you've found the address, right-click the address in Cheat Engine and choose \"Find out what writes to this address\". A window will pop up with an empty list.\n"
"Then click on the Change value button in this tutorial, and go back to Cheat Engine. If everything went right there should be an address with assembler code there now.\n"
"Click it and choose the replace option to replace it with code that does nothing. That will also add the code address to the code list in the advanced options window. (Which gets saved if you save your table)\n"
"\n"
"Click on stop, so the game will start running normal again, and close to close the window.\n"
"Now, click on Change value, and if everything went right the Next button should become enabled.\n"
"\n"
"Note: When you're freezing the address with a high enough speed it may happen that next becomes visible anyhow\n"
msgstr ""
"Іноді знайдені вами адреси з будь-якими значеннями змінюються при перезапуску гри або навіть під час самої гри. У такому випадку ви можете скористатися кількома способами для створення робочої таблиці.\n"
"\n"
"У цьому кроці я розповім про один такий спосіб - знаходження та підміна коду.\n"
"Адреса зі значенням, розташованим нижче, буде змінюватися при кожному перезапуску цієї навчальної програми, тому просто знаходження адреси нам не допоможе, тому що наступного разу вона буде іншою..\n"
"\n"
"Щоб пройти цей крок, нам потрібно за допомогою підміни коду зробити так, щоб при натисканні на кнопку «Змінити значення» значення залишалося незмінним.\n"
"\n"
"Для початку спробуйте знайти адресу. (Думаю, на цей момент, ви вже знаєте як це зробити)\n"
"Після того, як ви знайшли потрібну адресу і додали її до таблиці, натисніть на неї правою кнопкою миші, виберіть і натисніть "Знайти інструкції, що записують за цією адресою". Відкриється вікно "Наступні інструкції записують у ххххх" з порожнім списком.\n"
"Тепер натисніть кнопку «Змінити значення» у цій навчальній програмі, а потім знову поверніться до Cheat Engine. Якщо все зроблено правильно, у списку з'явиться адреса з асемблерною інструкцією.\n"
"Виділіть її та натисніть на кнопку "Замінити NOP'ами", яка замінить обрану інструкцію на NOP (NOP - інструкція процесора на мові асемблера, яка наказує нічого не робити), а також додасть адресу з цією інструкцією до списку кодів, які розташовані в вікні "
"Додаткові можливості". Якщо ви збережете таблицю, то і цей список буде збережений разом з нею.\n"
"\n"
"Натисніть кнопку «Зупинити» та закрийте вікно «Наступні інструкції записують у ххххх».\n"
"Тепер натисніть кнопку "Змінити значення" і, якщо все зроблено правильно, кнопка "Далі" стане доступною.\n"
"\n"
"Примітка: Якщо ви заморозите адресу з досить високим інтервалом заморозки, може статися так, що кнопка «Далі» також стане доступна\n"

#: unit6.rswelldoneyouscrewedupthetutorial
msgctxt "unit6.rswelldoneyouscrewedupthetutorial"
msgid "Well done, you screwed up the tutorial!!!!"
msgstr "Круто! Ви впоралися із завданням!!!!"

#: unit7.rsdontfuckingfreezethepointer
msgid "I'm sorry, but freezing the pointer is not really a functional solution"
msgstr "Вибачте, але заморожування покажчика - це не зовсім функціональне рішення.

#: unit7.rsloser
msgctxt "unit7.rsloser"
msgid "BOO"
msgstr "БУ!"

#: unit7.rsstep6pointerspw
msgid "Step 6: Pointers: (PW=%s)"
msgstr "Крок 6: Вказівники: (пароль=%s)"

#: unit7.rstryagain7
msgid "So, pointers are too difficult eh? Don't worry, try again later. For most beginners this is difficult to grasp. But I have to tell you it's a powerfull feature if you learn to use it. Are you sure you want to quit?"
msgstr ""
"Невже вказівники такі складні? Не хвилюйтеся, спробуйте ще раз пізніше. Більшості новачкам важко зрозуміти це одразу. Однак, покажчики відкриють великі можливості, якщо ви навчитеся ними користуватися.\n"
"Ви впевнені, що хочете вийти?"

#: unit7.rstutorialstep6
msgid ""
"In the previous step I explained how to use the Code finder to handle changing locations. But that method alone makes it difficult to find the address to set the values you want.\n"
"That's why there are pointers:\n"
"\n"
"At the bottom you'll find 2 buttons. One will change the value, and the other changes the value AND the location of the value.\n"
"For this step you don't really need to know assembler, but it helps a lot if you do.\n"
"\n"
"First find the address of the value. When you've found it use the function to find out what accesses this address.\n"
"Change the value again, and a item will show in the list. Double click that item. (or select and click on more info) and a new window will open with detailed information on what happened when the instruction ran.\n"
"If the assembler instruction doesn't have anything between a '[' and ']' then use another item in the list.\n"
"If it does it will say what it think will be the value of the pointer you need.\n"
"Go back to the main cheat engine window (you can keep this extra info window open if you want, but if you close it, remember what is between the [ and ] ) and do a 4 byte scan in hexadecimal for the value the extra info told you.\n"
"When done scanning it may return 1 or a few hundred addresses. Most of the time the address you need will be the smallest one. Now click on manually add and select the pointer checkbox.\n"
"\n"
"The window will change and allow you to type in the address of a pointer and a offset.\n"
"Fill in as address the address you just found.\n"
"If the assembler instruction has a calculation (e.g: [esi+12]) at the end then type the value in that's at the end. else leave it 0. If it was a more complicated instruction look at the calculation.\n"
"\n"
"example of a more complicated instruction:\n"
"[EAX*2+EDX+00000310] eax=4C and edx=00801234.\n"
"In this case EDX would be the value the pointer has, and EAX*2+00000310 the offset, so the offset you'd fill in would be 2*4C+00000310=3A8.  (this is all in hex, use calc.exe from windows in scientific mode to calculate)\n"
"\n"
"Back to the tutorial, click OK and the address will be added, If all went right the address will show P->xxxxxxx, with xxxxxxx being the address of the value you found. If thats not right, you've done something wrong.\n"
"Now, change the value using the pointer you added in 5000 and freeze it. Then click Change pointer, and if all went \n"
"right the next button will become visible.\n"
"\n"
"\n"
"extra:\n"
"And you could also use the pointer scanner to find the pointer to this address\n"
msgstr ""
"У попередньому кроці ми навчилися заморожувати значення динамічної адреси за допомогою заміни коду, але той метод не дозволяє змінювати саме значення адреси, коли захочемо.\n"
"Ось чому є вказівники:\n"
"Внизу ви бачите дві кнопки. Одна змінює значення, а інша змінює і саме значення, і адресу, в якому воно зберігається.\n"
"На даному етапі знання асемблера не обов'язкове, але воно б вам дуже допомогло.\n"
"\n"
"Спочатку знайдіть адресу зі значенням. Після того, як ви його знайшли і додали до таблиці, натисніть на нього правою кнопкою миші та виберіть та натисніть «Знайти інструкції, що звертаються до цієї адреси», щоб знайти асемблерні інструкції, які отримують доступ до цієї адреси. "
"Тепер змініть значення натисканням кнопки "Змінити значення" в навчальній програмі і, у вікні Cheat Engine, ви побачите список з асемблерними інструкціями. Зробіть подвійний клік по одній з них (або виділіть інструкцію і натисніть на кнопку "Додаткова")
"інформація») і з'явиться нове вікно з детальною інформацією про те, що сталося при спрацюванні цієї інструкції.\n"
"\n"
"Якщо в асемблерній інструкції немає квадратних дужок «[» та «]», виберіть іншу інструкцію зі списку, де вони присутні.\n"
"Тепер натисніть кнопку "Додаткова інформація" і скопіюйте значення, вказане в "Вірогідне значення вказівника, потрібне для знаходження цієї адреси:»\n"
"\n"
"Поверніться у головне вікно Cheat Engine і почніть пошук значення, яке ви скопіювали з «Вірогідне значення вказівника, потрібне для знаходження цієї адреси:» або трохи нижче, де відображено стан регістрів (якщо інструкція має вигляд «mov [edx],eax», то дивіться стан
"регістра edx). Виберіть тип даних "4 Байта" і поставте галочку навпроти "Hex", тому що це значення відображено в шістнадцятковому вигляді. Пошук може завершитися знаходженням однієї або декількох сотень адрес. У більшості випадків, адрес не дуже багато. Тепер "
"натисніть на кнопку «Додати адресу» і, у вікні, поставте галочку навпроти «Покажчик».\n"
"\n"
"Вікно додавання адреси зміниться і ми можемо заповнити вказівник та зміщення.\n"
"В якості адреси вкажіть щойно знайдену адресу.\n"
"Якщо асемблерна інструкція виконує деякі обчислення (наприклад: [esi+12]), то як зміщення вкажіть число 12, інакше (якщо просто [esi]) залиште 0.\n"
"Ассемблерна інструкція може мати і складніші обчислення.\n"
"\n"
"Наприклад:\n"
"[EAX*2+EDX+00000310], где eax=4C, а edx=00801234.\n"
"В даному випадку «EDX» зберігатиме значення покажчика, а «EAX*2+00000310» зберігатиме зсув, який можна дізнатися, виконавши обчислення за допомогою Windows-калькулятора в інженерному режимі (2*4C+00000310=3A8).\n "
"(На системах вище Windows XP, замість інженерного режиму, потрібно використовувати режим програміста.)\n"
"\n"
"Але повернемося назад до нашого уроку.\n"
"У вікні "Додати адресу" ви вже ввели покажчик і зміщення, тому натисніть кнопку "Підтвердити". У таблицю Cheat Engine додасться адреса, яка буде відображена у вигляді "У-> xxxxxxx", де "xxxxxxx" - поточна адреса зі значенням. Якщо значення цієї адреси відрізняється, то ви "
"зробили щось неправильно.\n"
"Тепер змініть значення доданої вами адреси на 5000 і заморозьте його. Якщо все зроблено правильно, то після натискання на кнопку "Змінити покажчик" стане доступна кнопка "Далі".\n"
"\n"
"\n"
"Додаток:\n"
"Ви також можете скористатися сканером покажчиків («Редактор пам'яті» -> «Інструменти» -> «Сканування покажчиків»), щоб знайти покажчик на цю адресу.\n"

#: unit7.rswelldoneyouscrewedupthetutorial
msgctxt "unit7.rswelldoneyouscrewedupthetutorial"
msgid "Well done, you screwed up the tutorial!!!!"
msgstr "Чудово! Ви впоралися із завданням!!!!"

#: unit7.rsyouvegotsecondslefttochangethevalueto5000
msgid "Ви маєте %s second%s натиснути на зміну значення до 5000"
msgstr "У вас є %s секунд, щоб змінити значення на 5000"

#: unit8.rsawyouredeathletmereviveyou
msgctxt "unit8.rsawyouredeathletmereviveyou"
msgid "Aw, you're dead! Let me revive you"
msgstr "Ви померли! Дозвольте вас оживити"

#: unit8.rshealth
msgid "Health"
msgstr "Здоров'я"

#: unit8.rsloser
msgctxt "unit8.rsloser"
msgid "BOO"
msgstr "БУ!"

#: unit8.rsstep7codeinjectionpw
msgid "Step 7: Code Injection: (PW=%s)"
msgstr "Крок 7: Ін'єкція коду: (пароль=%s)"

#: unit8.rstryagain8
msgid "Code injections too tough? No problem, memory scanning and basic pointers should be enough to get you experienced enough and you can always try the tutorial later. Are you sure you want to quit?"
msgstr ""
"Ін'єкція коду видається надто складною? Не біда, уміння знаходити значення і прості покажчики говорить про те, що ви вже досить досвідчені, і ви завжди можете спробувати пройти цей крок ще раз.\n"
"Ви впевнені, що хочете вийти?"

#: unit8.rstutorialstep7
msgid ""
"Code injection is a technique where you inject a piece of code into the target process, and then reroute the execution of code to go through your own written code.\n"
"\n"
"In this tutorial you'll have a health value and a button that will decrease your health by 1 each time you click it.\n"
"Your task is to use code injection to make the button increase your health by 2 each time it is clicked\n"
"\n"
"Start with finding the address and then find what writes to it.\n"
"then when you've found the code that decreases it browse to that address in the disassembler, and open the auto assembler window (ctrl+a)\n"
"There click on template and then code injection, and give it the address that decreases health (If it isn't already filled in correctly)\n"
"That will generate a basic auto assembler injection framework you can use for your code.\n"
"\n"
"Notice the alloc, that will allocate a block of memory for your code cave, in the past, in the pre windows 2000 systems, people had to find code caves in the memory(regions of memory unused by the game), but that's luckily a thing of the past since windows 2000, and will "
"these days cause errors when trying to be used, due to SP2 of XP and the NX bit of new CPU's\n"
"\n"
"Also notice the line newmem: and originalcode: and the text \"Place your code here\"\n"
"As you guessed it, write your code here that will increase the  health with 2.\n"
"An usefull assembler instruction in this case is the \"ADD instruction\"\n"
"here are a few examples:\n"
"\"ADD [00901234],9\" to increase the address at 00901234 with 9\n"
"\"ADD [ESP+4],9\" to increase the address pointed to by ESP+4 with 9\n"
"In this case, you'll have to use the same thing between the brackets as the original code has that decreases your health\n"
"\n"
"Notice:\n"
"It is recommended to delete the line that decreases your health from the original code section, else you'll have to increase your health with 3 (you increase with 3, the original code decreases with 1, so the end result is increase with 2), which might become confusing. But "
"it's all up to you and your programming.\n"
"\n"
"Notice 2:\n"
"In some games the original code can exist out of multiple instructions, and sometimes, not always, it might happen that a code at another place jumps into your jump instruction end will then cause unknown behavior. If that happens, you should usually look near that "
"instruction and see the jumps and fix it, or perhaps even choose to use a different address to do the code injection from. As long as you're able to figure out the address to change from inside your injected code.\n"
msgstr ""
"Инъекция кода - это метод, при котором в выбранный процесс программы добавляется кусок кода с перенаправлением выполнения оригинального кода через добавленный вами код.\n"
"\n"
"На этом шаге у вас есть значение здоровья и кнопка для его уменьшения на 1.\n"
"Ваша задача состоит в том, чтобы использовать инъекцию кода для увеличения значения здоровья на 2 при каждом нажатии на кнопку «Удар».\n"
"\n"
"Почніть з знаходження адреси, яка зберігає значення здоров'я, потім дізнайтеся, які асемблерні інструкції його зменшують. Для цього натисніть «Знайти інструкції, що записують на цю адресу» на знайдену адресу, а потім на кнопку «Удар».\n"
"Коли ви знайшли потрібну інструкцію, перейдіть в дизассемблер і відкрийте вікно «Автоассемблер» натисканням клавіш Ctrl+A (або через меню «Інструменти» -> «Автоасемблер»).\n"
"Тепер натисніть на меню «Шаблон» -> «Ін'єкція коду» і в вікні, що з'явиться, вкажіть адресу, по якій розташована асемблерна інструкція, що зменшує здоров'я (Якщо правильна адреса ще не заповнена, тому Cheat Engine автоматично вказує в цьому рядку адресу виділеної в "
"відладчику асемблерної інструкції). Сгенерується шаблон базового скрипта для ін'єкції, який ви можете використовувати для додавання коду.\n"
"\n"
"Зверніть увагу на директиву "alloc", яка виділяє блок пам'яті під ваш код. Колись давно, ще до виходу системи Windows 2000, людям доводилося самостійно знаходити область пам'яті, що не використовується (так званий "code cave") у грі, щоб впровадити в її свій код, "
"але, на щастя, все це залишилося у минулому. У наші дні, внаслідок виходу Сервіс Пака 2 для Windows XP та технології NX-Bit у нових процесорів, використання code cave може призвести до різних помилок.\n"
"Зверніть увагу також на рядки «newmem:», «originalcode:» і напис «place your code here»\n"
"Як ви вже здогадалися, саме там, де знаходиться цей напис, і потрібно ввести наш код, який збільшуватиме значення здоров'я на «2».\n"
"Для цього нам потрібно скористатися арифметичною командою «ADD»\n"
"Ось кілька прикладів:\n"
"ADD [00901234],9" - додає число 9 до значення за адресою 00901234 \n"
"«ADD [ESP+4],9» - додає число 9 до значення за адресою, на яку вказує ESP+4\n"
"У нашому випадку, як адреса потрібно використовувати ту ж адресу, що знаходиться між дужками в оригінальній інструкції асемблерів, що зменшує здоров'я.\n"
"Примітка:\n"
"У цьому випадку, в асвтоассемблері рекомендується видалити з секції «originalcode:» оригінальну інструкцію, що зменшує здоров'я. Інакше вам доведеться збільшувати значення здоров'я на 3 (Ви збільшуєте значення здоров'я на 3, оригінальна інструкція зменшує це значення на "
"1, зрештою, значення збільшиться на 2), що може вас трохи заплутати. Але все це залежить тільки від вас та вашого рівня програмування.\n"
"\n"
"Примітка 2:\n"
"У деяких іграх асемблерний код, що виконує дію з будь-яким значенням у грі, може складатися з кількох частин, що знаходяться в різних місцях. І якщо ви зробите ін'єкцію в такий код, то іноді, правда, рідко, це може призвести до того, що код з іншого місця
"стрибне в кінець поставленого вами стрибка, на ваш code cave, в якому розташований ваш чит, що може призвести до непередбачуваних дій. У таких випадках необхідно переглянути код поруч з тим місцем, куди ви робите ін'єкцію, перевірити всі переходи і поправити їх або "
"спробуйте іншу інструкцію, що знаходиться поруч, для виконання ін'єкції.\n"

#: unit9.rsloser
msgctxt "unit9.rsloser"
msgid "BOO"
msgstr "БУ!"

#: unit9.rsstep8multilevelpointerspw
msgid "Step 8: Multilevel pointers: (PW=%s)"
msgstr "Крок 8: Багаторівневі покажчики: (пароль=%s)"

#: unit9.rstryagain9
msgid "Aw, ви не впевнені, що кінець. Але ні, ні багато речей, які можуть бути справжнім язиком, коли пишуть з. Якщо ви хотіли, щоб я хотів, щоб зробити це."
msgstr ""
"Ех, адже ви майже підійшли до кінця навчання... Але не хвилюйтеся, коли справа доходить до багаторівневих покажчиків - це може бути реальним головним болем. Одного разу ви станете набагато досвідченішими і зможете спробувати пройти цей крок ще раз.\n"
"Ви дійсно хочете вийти?"

#: unit9.rstutorialstep8
msgid ""
"This step will explain how to use multi-level pointers.\n"
"In step 6 you had a simple level-1 pointer, with the first address found already being the real base address.\n"
"This step however is a level-4 pointer. It has a pointer to a pointer to a pointer to a pointer to a pointer to the health.\n"
"\n"
"You basicly do the same as in step 6. Find out what accesses the value, look at the instruction and what probably is the base pointer value, and what is the offset, and already fill that in or write it down. But in this case the address you'll find will also be a pointer. "
"You just have to find out the pointer to that pointer exactly the same way as you did with the value. Find out what accesses that address you found, look at the assembler instruction, note the probable instruction and offset, and use that.\n"
"and continue till you can't get any further (usually when the base address is a static address, shown up as green)\n"
"\n"
"Click Change Value to let the tutorial access the health.\n"
"If you think you've found the pointer path click Change Register. The pointers and value will then change and you'll have 3 seconds to freeze the address to 5000\n"
"\n"
"Extra: This problem can also be solved using a auto assembler script, or using the pointer scanner\n"
"Extra2: In some situations it is recommended to change ce's codefinder settings to Access violations when \n"
"Encountering instructions like mov eax,[eax] since debugregisters show it AFTER it was changed, making it hard to find out the the value of the pointer\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Extra3: If you're still reading. You might notice that when looking at the assembler instructions that the pointer is being read and filled out in the same codeblock (same routine, if you know assembler, look up till the start of the routine). This doesn't always happen, "
"but can be really useful in finding a pointer when debugging is troublesome\n"
msgstr ""
"Цей крок навчить вас знаходження багаторівневих покажчиків.\n"
"У Крок 6 у вас був простий однорівневий покажчик, перша ж знайдена адреса і була реальною базовою адресою.\n"
"У цьому кроці ви будете мати справу з чотирирівневим покажчиком, тобто покажчик на покажчик на покажчик на покажчик адреси здоров'я.\n"
"\n"
"В основному, вам потрібно робити все те саме, що і в «Крок 6». Знайдіть адресу з вказаним нижче значенням, натисніть «Знайти інструкції, що звертаються до цієї адреси», змініть значення за допомогою кнопки «Змінити значення», погляньте на інструкції, що спливли, дізнайтеся ймовірне "
"значення покажчика та зміщення (останнє потрібно запам'ятати або десь записати). Почніть новий пошук, використовуючи передбачуване значення вказівника (не забудьте поставити галочку навпроти "Hex").\n"
"Ви знайшли адресу. У разі, т.к. маємо справу з багаторівневим покажчиком, знайдена адреса так само буде покажчиком. Тепер, аналогічно, вам потрібно знайти покажчик на цей покажчик. Поставте на щойно знайдену адресу «Знайти інструкції, що звертаються»
"До цієї адреси», змініть значення, погляньте на інструкції, що спливли... І ця знайдена адреса буде вказівником на покажчик. Продовжуйте пошук, повторюючи ті ж дії (не забуваючи запам'ятовувати/записувати зміщення та їх послідовність), поки в списку знайдених "
"адрес не з'явиться адреса, пофарбована в зелений колір.\n"
"Тепер натисніть у Cheat Engine на кнопку "Додати адресу" і поставте галку навпроти "Покажчик". У нижньому полі введення вкажіть знайдену адресу, пофарбовану в зелений колір, а трохи вище вкажіть зміщення (зверху вниз) у тій послідовності, в якій ви їх знаходили. Зрештою "
"Результат, у вас в таблиці з'явиться адреса виду «У-> xxxxxxx».\n"
"\n"
"Тепер змініть значення адреси «-> xxxxxxx» на 5000, заморозьте його і натисніть кнопку «Змінити покажчик». Якщо ви знайшли правильний ланцюжок покажчиків, то кнопка «Далі» стане доступною.\n"
"\n"
"Додаток: Для вирішення цього кроку можна скористатися і сканером покажчиків, для автоматичного знаходження багаторівневого покажчика, або взагалі не шукати їх, а написати скрипт автоассемблера.\n"
"Додаток 2: У деяких ситуаціях, коли ви маєте справу з інструкціями виду mov eax,[eax], рекомендується змінити налаштування "Визначника коду" на "Порушення доступу", тому що стан регістрів відладчика показується тільки ПІСЛЯ виконання інструкції, утруднюючи пошук "
"покажчика\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Додаток 3: Якщо ви все ще читаєте. Ви можете помітити, що асемблерні інструкції, які вважають значення покажчика і ті, що заповнюють це значення, знаходяться в тому самому сегменті коду (в одному циклі коду, якщо ви знаєте асемблер - пошукайте початок цього циклу). Така
"ситуація виникає не завжди, але може бути дуже корисною при знаходженні покажчика, якщо налагодження ускладнене.\n"

#: unit9.rsunrandomizerdetected
msgid "Unrandomizer detected"
msgstr "Виявлено «Антирандомайзер»"

#: unit9.rsyouvegotsecondslefttochangethevalueto5000
msgid "You've got %s seconds ліворуч, щоб змінити значення 5000"
msgstr "У вас є %s секунд, щоб змінити значення на 5000"